params{

    help                 = false
    anndata_compression_opts = 9
    cell_hard_filters = true

    normalise{
        mode    = "conventional"
        layer = "none"
        minimum_number_of_cells_for_donor = 3 //# The minimum number of cells that the donor should have. This shouldnt be less than 3 cells.

        gene_filters{
            description = """Parameters for sample QC prior to merge.
                Filters are applied to all samples."""
            //# genes_exclude = 'IG[HKL][VDJ]|AC233755.*|IGH[GMDEA]|IGKC|IGLC|IGLL|TR[ABGD][CVDJ]' //# this can be a file, rejex pattern or a list of comma separated gene names
            genes_exclude = ''
            variable_genes_exclude = "${projectDir}/assets/genes_remove_hvg_v001.tsv" //# list of hvg to still keep if no geenes are needed to be excluded from integration and clustering then please provide: "no_file__genes_exclude_hvg"
            genes_at_least_in_nr_cells = 5 //# keep genes that are expressed in ceirtain amount of cells.
        }

        genes_score = "${projectDir}/assets/genes_score_v001.tsv" //# If no gene scoring is needed please provide "no_file__genes_score"
        drop_cell_passes_qc_from_clustering = false //#This filter if set to true will drop the cells that dont pass the adaptive qc criteria before clustering.
        
    }

    reduced_dims{
        run_downstream_analysis = false
        description = """Parameters for dimensionality reduction (principal component, seurat
        and harmony calculations). All pairwise combinations of
        vars_to_regress and n_dims will be performed."""

        vars_to_regress{
            description = """Comma separated string of variables to regress. Use "" to
            indicate no regession is to be performed. Use ; separation to regress multiple values simultaneously in the same run"""
            //# value = 'pct_counts_gene_group__mito_transcript'
            value = ''
            
        }

        n_dims{
            description =  """Number of dimensions to use for calculating PCs,
            harmony corrected PCs, and clusters. Value should be int.
            If auto_estimate == true then the 'knee' of a scree plot is
            automatically estimated via the kneedle algorithm and used.
            If auto_estimate == true then value is ignored.
            add_n_to_estimate is added to the elbow estimate."""
            auto_estimate = true
            add_n_to_estimate = 5
            value = 30
        }
        seurat_integration{
            k_anchor = 4 //# integrate sct
            dims = 10
            ndim_sct = 10 //# Number of dimensions to use for SCT integrated data (check elbow plot to see if it's correct)
            ndim_citeBgRemoved = 10 //# Number of dimensions to use for cite_bgRemoved integrated data (check elbow plot to see if it's correct)
            ndim_cite_integrated = 10 //# Number of dimensions to use for cite integrated data (check elbow plot to see if it's correct)
        }

    }

    filter_multiplets{
        run_process = true
        expected_multiplet_rate = 0.1 //# used for scrublet and doubletFinder.
        
        doubletDetection{
             run_process = false           
        }
        doubletDecon{
            run_process = true
        }

        scDblFinder{
            run_process = true
        }
        scds{
            run_process = true
        }
        doubletFinder{
            run_process = true
        }

        scrublet{
            description = """Parameters for scrublet. Runs prior to filters
                below. Note scale_log10 should be 'True|False'.
                Output from multiplet analysis will be added to the final
                AnnData object. The flag only works if
                file_cellmetadata from the main nextflow call is not set."""
            run_process= true
            n_simulated_multiplet= 100000
            multiplet_threshold_method = 'threshold_li'
            scale_log10 = 'False'
        }
    }

    celltype_assignment{
        run_celltype_assignment = true
        run_azimuth = true
        run_scpred = true
        run_keras = false
        run_celltypist = true
    }
    mapping_file = "${projectDir}/assets/azimuth/Azimuth_Mappings.txt"
    
    
    
    metadata_key_column{
            description = """Column in metadata that matches the experiment_id column in
        tenx_data."""
            value = 'experiment_id'
    }

    mads_categories ='pct_counts_gene_group__mito_transcript,pct_counts_gene_group__mito_protein,pct_counts_gene_group__ribo_protein,pct_counts_gene_group__ribo_rna,total_counts,n_genes_by_counts'

    celltype_prediction {
        keras {
            //# https://yascp.cog.sanger.ac.uk/public/singularity_images/eqtl_26_10_2022.img
            keras_model = 'https://yascp.cog.sanger.ac.uk/public/celltype/keras/keras_606D0E926847C0A1_clustered.h5'
            keras_weights_df = 'https://yascp.cog.sanger.ac.uk/public/celltype/keras/keras_606D0E926847C0A1_weights.tsv.gz'
            h5_layer = 'log1p_cp10k'
            keras_model_cluster_labels = "${projectDir}/assets/keras_cluster/data-cluster_labels.csv"
            filter_top_cell_probabilities = '0.5,0.75'
            save_all_probabilities = '--save_all_probabilities'
	    }
    }

    celltypist {
        run = true
        description = """https://github.com/Teichlab/celltypist"""
        remove_workdir = false
        copy_mode = "rellink"
        models = ['Immune_All_High.pkl','Immune_All_Low.pkl','COVID19_Immune_Landscape.pkl']
        //# OPTIONS:
        //# Adult_Mouse_Gut.pkl         COVID19_Immune_Landscape.pkl  Human_IPF_Lung.pkl    Lethal_COVID19_Lung.pkl
        //# Autopsy_COVID19_Lung.pkl    Developing_Human_Brain.pkl    Human_Lung_Atlas.pkl  models.json
        //# Cells_Fetal_Lung.pkl        Developing_Human_Thymus.pkl   Human_PF_Lung.pkl     Nuclei_Lung_Airway.pkl
        //# Cells_Intestinal_Tract.pkl  Developing_Mouse_Brain.pkl    Immune_All_High.pkl   Pan_Fetal_Human.pkl
        //# Cells_Lung_Airway.pkl       Healthy_COVID19_PBMC.pkl      Immune_All_Low.pkl
    }



    sample_qc{

        description = """Parameters for sample QC prior to merge.
            Filters are applied to all samples."""
        cell_filters{
            description = """Cell filters. Each bullet point is a seperate filter.
            Cells that evaluate to true for any of these filters, will be
            removed. Filters under 'all_samples' are applied to all samples.
            Filters under a sample id are applied to that specific sample."""

            all_samples{
                value = 'pct_counts_gene_group__mito_transcript > 20 or n_genes_by_counts < 500 or log10_ngenes_by_count < 0.8' // if nothing please place '' ; for multiple filters please split it with ; or ,
            }

            experiment{
                // value = '' //# If you would like to apply hard filters per specific experiment please provide: experiment_id:'pct_counts_gene_group__mito_transcript > 20;experiment_id2:'n_genes_by_counts < 500'
                value = "experiment_id:'pct_counts_gene_group__mito_transcript > 20';experiment_id2:'n_genes_by_counts < 500'"
            }

            filter_outliers{
                description = """After applying cell filters based on cutoffs, apply
                    an filter to remove outliers using cell information from
                    metadata_columns.
                    Recommended settings:
                        method: IsolationForest
                        metadata_columns: n_cells
                        outliers_fraction: 0.0
                        max_cells: 0.1 or 0.99
                    Notes:
                    * Filters applied across the full dataset (i.e., not on a per
                        sample level).
                    * Valid methods: LocalOutlierFactor, IsolationForest,
                        EllipticEnvelope, OneClassSVM.
                    * outliers_fraction: anticipated fraction of outlier cells.
                        If 0.0, then runs sklearn methods with 'auto' as the
                        anticipated number of outlier cells.
                    * max_samples: The fraction of cells to draw from X to train
                        each estimator. Only valid if method == IsolationForest."""
                run_process = true
                method = 'IsolationForest,MAD' //# Available methods: ocalOutlierFactor, IsolationForest, EllipticEnvelope, OneClassSVM, onesidemad
                metadata_columns = 'log1p_total_counts,log1p_n_genes_by_counts,pct_counts_gene_group__mito_transcript'
                mad_tresholds = '-3,-3,3' //# These one side MAD filters will be used if selected. If MAD is used then these thresholds will be used for each of them. [-] prefix means filtering on the left side of distribution, whereas [+] means filtering on the right side of distribution.
                outliers_fraction = 0.0
                max_samples = 0.1

                methods_thresholds = [
                        [ method : 'MAD', metadata_columns : 'log1p_total_counts,log1p_n_genes_by_counts,pct_counts_gene_group__mito_transcript', mad_tresholds : "-3,-3,3", outlier_filtering_strategy:'all_together'],
                        [ method : 'IsolationForest', metadata_columns : 'log1p_total_counts,log1p_n_genes_by_counts,pct_counts_gene_group__mito_transcript', outlier_filtering_strategy:'all_together'],
                    ]


            }
        }
        

        gt_match_based_adaptive_qc_exclusion_pattern = '' // #We run the adaptive QC on these patterns independently regardless on assigned celltype.  

        downsample_cells_fraction{
            description = """Downsample to this fraction of the number of
                observations (sc.pp.subsample). Use "" to indicate no downsampling.
                Example: if 0.8, will drop 20% of cells."""
            value= ''
        }

        downsample_cells_n{
            description = """Downsample to this number of observations
                (sc.pp.subsample). Use "" to indicate no downsampling. Example: if
                200 then 200 total cells will be kept."""
            value = ''
        }

        downsample_feature_counts{
            description = """Downsample the number of feature counts by this fraction.
                Use "" to indicate no downsampling."""
            value = ''
        }

    }

    plots_qc{

        description = """Parameters for basic QC plots after sample merge. All
        pairwise combinations of facet_columns and
        variable_columns_distribution_plots will be performed."""
        facet_columns{
            description = 'Column to facet all QC plots by.'
            value = 'experiment_id'
        }

        variable_columns_distribution_plots{
            description= """Plot the distributions of these variables (histogram and
            ecdf)."""
            value = 'total_counts,pct_counts_gene_group__mito_transcript'
        }

    }

    dont_integrate_just_cluster=false
    
    harmony{
        run_process= true
        description = 'Parameters for harmony'
        variables_and_thetas{
            description = 'Tuples of metadata columns and corresponding thetas'
            value = [
                [ variable: 'experiment_id', theta: 1.0 ],
            ]
        }
    }

    totalVi{
        run_process=false
        reduction_columns_cells = "cell_passes_qc;cell_passes_hard_filters" //# !!; - have to be split by ;Only cells marked in these columns as True across all will be kept. Select up to 3 columns.
        reduction_columns_genes = 'highly_variable' //# !!; - have to be split by ; Only Genes marked as true in these columns will be ketp for TotalVI clustering. 
        gene_list_to_keep = "${projectDir}/assets/fake_fileinput.tsv" //#Besides reduction Genes to keep we also provide genes we want to use in totalVI.
    }

    seurat_integration{
        run_process=false
    }

    bbknn{
        run_process = true
        description = 'Parameters for BBKNN'
        estimate_neighbors = true //# we wil use the number of neighbors as per bbknn i.e Total number of neighbours = neighbors_within_batch x the number of
        batch_variable{
            description = 'Variable to use for batch correction'
            value = 'experiment_id'
        }
    }

    lisi{
        run_process = false
        description = 'Parameters for Local Inverse Simpsons Index (LISI).'
        variables{
            description = 'Metadata variables to compute LISI over.'
            value = 'experiment_id'
        }
    }

    cluster{
        description = """Parameters for clustering. All pairwise combinations of
        method and resolution will be performed."""
        number_neighbors{
            description = """Number of neighbors. If <= 0, uses number of unique
            experiment_id."""
            value = 15
        }
        methods{
            description = 'Clustering method. Valid options [leiden|louvain].'
            value = 'leiden'
        }
        resolutions{
            description = 'Clustering resolution.'
            value = [0.1,0.5,1.0,5.0]
        }

        variables_boxplot{
            decription = 'Generate boxplots of these variables for each cluster.'
            value ='n_cells,total_counts,pct_counts_gene_group__mito_transcript'
        }

        known_markers{
             run_process = false
             value = []
                //# // {file_id: 'SmillieCS_31348891', file: '/lustre/scratch119/humgen/projects/sc-eqtl-ibd/data/marker_gene_db-raw_data/database/celltypes/colon/SmillieCS-31348891/database.tsv'},
                //# // [ file_id: 'ParikhK_30814735', file: '/lustre/scratch119/humgen/projects/sc-eqtl-ibd/data/marker_gene_db-raw_data/database/celltypes/colon/ParikhK-30814735/database.tsv'],
                //# // [ file_id: 'JamesKR_32066951', file: '/lustre/scratch119/humgen/projects/sc-eqtl-ibd/data/marker_gene_db-raw_data/database/celltypes/colon-immune/JamesKR-32066951/database.tsv']
             
         }
    }


    cluster_validate_resolution{
            description = 'Parameters for cluster resolution validation.'
            sparsity{
                description =  """LogisticRegression sparsity or inverse of regularization
                strength; must be a positive float. Like in support vector
                machines, smaller values specify stronger regularization."""
                value = 0.0001
            }
            train_size_cells{
                description = """Number of cells to use for training. Set to -1 for
                    to use default of 2/3 of total cells. Do not change this parameter
                    unless you know what you are doing."""
                value = -1
            }
        }

    cluster_marker{
            description = 'Parameters for identifying cluster marker features.'
            methods{
                description = 'Method for marker detection. Valid options [wilcoxon|logreg].'
                        value = 'wilcoxon'
            }
        }


    umap{
        run_process = true
        description = 'Parameters for umap.'
        colors_quantitative{
            description = 'Comma separated string of quantitative variables that will be used to color points.'
            value = 'n_cells,total_counts,pct_counts_gene_group__mito_transcript,prob_doublet,pct_counts_gene_group__ribo_rna,Azimuth:predicted.celltype.l2.score,Azimuth:predicted.celltype.l1.score,Azimuth:mapping.score,log10_ngenes_by_count'
        }
        colors_categorical{
            description = 'Comma separated string of categorical variables that will be used to color points.'
            value = 'experiment_id,cell_passes_qc-MAD-3,-3,3-per:all_together,cell_passes_qc,cell_passes_hard_filters,Azimuth:predicted.celltype.l1,Azimuth:predicted.celltype.l2'
        }
        n_neighbors{
            description = """Number of neighbors for sc.pp.neighbors call.
                Recommended value between 2-100. If you expect each cell type
                cluster to be shared across all experiments/samples, then setting
                this number to the number of experiments/samples is a good place to
                start. Note: values separated with a comma will be run within the
                same script call (rather than swarm)."""
            value= [15,50]
        }

        //# umap_init{
        //#     description = 'How to initialize the low dimensional embedding.'
        //#     value = 'X_pca'
        //# }
        umap_init{
            description = 'How to initialize the low dimensional embedding.'
            value = 'spectral'
        }
        umap_min_dist{
            description = """The effective minimum distance between embedded points.
                Recommended value between 0-1. Note: values separated with a comma
                will be run within the same script call (rather than swarm)."""
            value = 0.5
        }

        umap_spread{
            description = """The effective scale of embedded points.
                Recommended value between 0-3. Note: values separated with a comma
                will be run within the same script call (rather than swarm)."""
            value = 1.0
        }
    }

    sccaf{
        description = 'sccaf'
        run_assessment = true
        run_optimization = false
        min_accuracy = 0.92
        default_leiden_res = 4.0
    }

    azimuth{
        run_process = true
        celltype_refsets = [
                //# [ name : 'kidney', refset : "/lustre/scratch123/hgi/teams/hgi/mo11/tmp_projects/jaguar_yascp/nieks_pipeline/yascp_run/ref_kidney", annotation_labels : "cluster,subclass" ],
                [ name : 'PBMC', refset : "PBMC", annotation_labels : "celltype.l2,celltype.l1,celltype.l3" ],
            ]
    }

}

